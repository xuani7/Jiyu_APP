// 本文件用于，使用JQL语法操作项目关联的uniCloud空间的数据库，方便开发调试和远程数据库管理
// 编写clientDB的js API（也支持常规js语法，比如var），可以对云数据库进行增删改查操作。不支持uniCloud-db组件写法
// 可以全部运行，也可以选中部分代码运行。点击工具栏上的运行按钮或者按下【F5】键运行代码
// 如果文档中存在多条JQL语句，只有最后一条语句生效
// 如果混写了普通js，最后一条语句需是数据库操作语句
// 此处代码运行不受DB Schema的权限控制，移植代码到实际业务中注意在schema中配好permission
// 不支持clientDB的action
// 数据库查询有最大返回条数限制，详见：https://uniapp.dcloud.net.cn/uniCloud/cf-database.html#limit
// 详细JQL语法，请参考：https://uniapp.dcloud.net.cn/uniCloud/jql.html

// 下面示例查询uni-id-users表的所有数据
db.collection('uni-id-users').get();

db.collection('target').where(
        "user_id==$cloudEnv_uid"
    ).field({'targetDate':true,'targetText':true}).get()
    
db.collection('target').where({
    	"user_id==$cloudEnv_uid"
    }).field({'dot_list':true}).get()
    



db.collection('articles').where("_id=='6404a2cde1a35c8785ba2e1b'").get()

db.collection('user-article')
    .where("article_id == article_id[0]._id && user_id == $cloudEnv_uid").update({
		"isLike" : isLike,
        "isCollect" : isCollect
	})
    
let articleId = '6404a2cde1a35c8785ba2e1b'
db.collection('user-article')
.where("article_id== articleId && user_id=='64046491819ce84ffc05626b'").update({
    "isLike" : false,
    "isCollect" : false,
})

let userArticle = await dbJQL.collection('user-article').where('user_id == $cloudEnv_uid && isCollect == true').getTemp()
let res = await dbJQL.collection(userArticle,'articles').get()

let articleId = '6404a2cde1a35c8785ba2e1b'
db.collection('user-article')
.where(`article_id== '${articleId}' && user_id=='64046491819ce84ffc05626b'`).update({
    "isLike" : false,
    "isCollect" : false,
})

db.collection('user_article').where(`isCollect==true && user_id=="64046491819ce84ffc05626b"`).field("isLike,isCollect,article_id").get()